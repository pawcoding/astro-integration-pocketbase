name: 🚀 Publish new version
# Run this on every push to master and next
on:
  push:
    branches:
      - master
      - next

env:
  HUSKY: 0

jobs:
  publish:
    # Use the latest version of Ubuntu
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    steps:
      # Checkout repository
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      # Setup Node
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "npm"

      # Install dependencies
      - name: 📦 Install dependencies
        run: |
          npm ci

      # Lint code
      - name: 🧹 Lint code
        run: npm run lint

      # Check format
      - name: 🧹 Check format
        run: npm run format:check

      # Type check
      - name: 🧪 Type check
        run: npm run typecheck

      # Create release
      - name: 🚀 Create release
        if: github.repository == 'pawcoding/astro-integration-pocketbase'
        id: release
        uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Update project on website
      - name: 🖥️ Update website
        if: github.repository == 'pawcoding/astro-integration-pocketbase' && steps.release.outputs.new_release_published == 'true' && !steps.release.outputs.new_release_channel  && steps.release.outputs.new_release_patch_version == '0'
        uses: pawcoding/update-project-action@v0.0.2
        with:
          pocketbase-url: ${{ vars.PB_URL }}
          collection-id: ${{ vars.PB_COLLECTION }}
          record-id: ${{ vars.PB_RECORD }}
        env:
          PB_EMAIL: ${{ secrets.PB_EMAIL }}
          PB_PASSWORD: ${{ secrets.PB_PASSWORD }}
